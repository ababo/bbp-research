"""Tests for operations related to Boolean backpropagation."""

import bitwise2
from bitwise2 import bp


def test_activation_sensitivity():
    """Test activation_sensitivity()."""

    x = bitwise2.bit_tensor(
        [
            "11110000111100001111000011110000_00001111111100001111000011110000",
            "11110000111100001111000011110000_11110000111100000000111111110000",
            "00001111000011110000111100001111_11110000111100001111000011110000",
            "11111111000000001111111100000000_00000000111111110000000011111111",
            "00000000001111110000000011111111_00111111000000001111111100000000",
            "11110000111100001111000011110000_00000000111100001111000011111111",
        ]
    )

    w = bitwise2.bit_tensor(
        [
            "11000000110000000000000000000000_11000000110000000000000000000000",
            "00001100000011000000000000000000_00001100000011000000000000000000",
            "00000000000000001100000011000000_00000000000000001100000011000000",
        ]
    )

    sp, sm = bp.activation_sensitivity(x, w, bp.SensitivityDependency.WEIGHTS)

    expected_sp = bitwise2.bit_tensor(
        [
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "11110000111100001111000011110000_11110000111100000000111111110000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000001111110000000011111111_00111111000000001111111100000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "11110000111100001111000011110000_00000000111100001111000011111111",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
        ]
    )

    expected_sm = bitwise2.bit_tensor(
        [
            [
                "11000000110000000000000000000000_00000000110000000000000000000000",
                "00000000000000000000000000000000_00001100000000000000000000000000",
                "00000000000000001100000011000000_00000000000000001100000011000000",
            ],
            [
                "11000000110000000000000000000000_11000000110000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000001100000011000000_00000000000000000000000011000000",
            ],
            [
                "00000000000000000000000000000000_11000000110000000000000000000000",
                "00001100000011000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000001100000011000000",
            ],
            [
                "11000000000000000000000000000000_00000000110000000000000000000000",
                "00001100000000000000000000000000_00000000000011000000000000000000",
                "00000000000000001100000000000000_00000000000000000000000011000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000011000000000000000000_00001100000000000000000000000000",
                "00000000000000000000000011000000_00000000000000001100000000000000",
            ],
            [
                "11000000110000000000000000000000_00000000110000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000001100000011000000_00000000000000001100000011000000",
            ],
        ]
    )

    assert sp == expected_sp
    assert sm == expected_sm

    sp, sm = bp.activation_sensitivity(x, w, bp.SensitivityDependency.INPUTS)

    expected_sp = bitwise2.bit_tensor(
        [
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00001100000011000000000000000000_00001100000011000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "11000000110000000000000000000000_11000000110000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00001100000011000000000000000000_00001100000011000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
        ]
    )

    expected_sm = bitwise2.bit_tensor(
        [
            [
                "11000000110000000000000000000000_00000000110000000000000000000000",
                "00000000000000000000000000000000_00001100000000000000000000000000",
                "00000000000000001100000011000000_00000000000000001100000011000000",
            ],
            [
                "11000000110000000000000000000000_11000000110000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000001100000011000000_00000000000000000000000011000000",
            ],
            [
                "00000000000000000000000000000000_11000000110000000000000000000000",
                "00001100000011000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000001100000011000000",
            ],
            [
                "11000000000000000000000000000000_00000000110000000000000000000000",
                "00001100000000000000000000000000_00000000000011000000000000000000",
                "00000000000000001100000000000000_00000000000000000000000011000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000011000000000000000000_00001100000000000000000000000000",
                "00000000000000000000000011000000_00000000000000001100000000000000",
            ],
            [
                "11000000110000000000000000000000_00000000110000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000001100000011000000_00000000000000001100000011000000",
            ],
        ]
    )

    assert sp == expected_sp
    assert sm == expected_sm


def test_row_activation():
    """Test row_activation()."""

    x = bitwise2.bit_tensor(
        [
            "11010011100010110101101000111001_01100101110110011101100010011010",
            "00101110011010100011110010110100_10101001010100010111000100011110",
            "11100011001101011110100111010001_00011011101001101110001100110101",
            "01010010111100011011001000001111_11001100100010101100101010011000",
        ]
    )
    w = bitwise2.bit_tensor(
        [
            "10101010101010101010101010101010_10101010101010101010101010101010",
            "00101100011101001010010111000110_10011010001001100010011101100101",
            "11001100110011001100110011001100_11001100110011001100110011001100",
            "00011100110010100001011000101110_11100100010110010001110011001010",
        ]
    )
    assert bp.row_activation(x, w) == bitwise2.bit_tensor(
        ["1011", "1111", "1110", "1111"]
    )


def test_specialized_activation_sensitivity():
    """Test specialized_activation_sensitivity()."""

    sp = bitwise2.bit_tensor(
        [
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "11110000111100001111000011110000_11110000111100000000111111110000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
        ]
    )

    sm = bitwise2.bit_tensor(
        [
            [
                "00010000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00001000000000000000000000000000",
                "00000000000000000001100000000000_00000000000000000000000000000000",
            ],
            [
                "00010000000000000000000000000000_00000000000000000000000100000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000001000000000000000",
            ],
        ]
    )

    ss = bp.specialized_activation_sensitivity(sp, sm)

    expected_ss = bitwise2.bit_tensor(
        [
            [
                "00010000000000000000000000000000_00000000000000000000000000000000",
                "00000000000000000000000000000000_00001000000000000000000000000000",
                "00000000000000000000000000000000_00000000000000000000000000000000",
            ],
            [
                "00000000000000000000000000000000_00000000000000000000000000000000",
                "11110000111100001111000011110000_11110000111100000000111111110000",
                "00000000000000000000000000000000_00000000000000001000000000000000",
            ],
        ]
    )

    assert ss == expected_ss


def test_specialized_error_projection():
    """Test specialized_error_projection()."""

    ss = bitwise2.bit_tensor(
        [
            [
                "10001100000000001000000000000000_00000000000010000000000000000001",
                "10000000100000000000000000000000_00000000000000000001000000000000",
                "00000000000000000000001000000000_00000001000000000000000000000000",
                "00001100000000000010000000000000_00000000000000000000000010000001",
            ],
            [
                "11001100000000001000000000000000_00000000000010000000000000000001",
                "10000000100000000000000000000000_00000000000000000001000000000000",
                "00000000000000000000001000000000_00000001000000000000000000000000",
                "00001100000000000010000000000000_00000000000000000000000010000001",
            ],
            [
                "10001100000000001000000000000000_00000000000010000000000000000001",
                "11000000100000000000000000000000_00000000000000000001000000000000",
                "00000000000000000000001000000000_00000001000000000000000000000000",
                "00001100000000000010000000000000_00000000000000000000000010000001",
            ],
            [
                "10001100000000001000000000000000_00000000000010000000000000000001",
                "10000000100000000000000000000000_00000000000000000001000000000000",
                "01000000000000000000001000000000_00000001000000000000000000000000",
                "00001100000000000010000000000000_00000000000000000000000010000001",
            ],
            [
                "01010101010101010101010101010101_10101010101010101010101010101010",
                "10101010101010101010101010101010_01010101010101010101010101010101",
                "11111111111111111111111111111111_00000000000000000000000000000000",
                "00000000000000000000000000000000_11111111111111111111111111111111",
            ],
        ]
    )

    e = bitwise2.bit_tensor(
        [
            "1010",
            "0101",
            "0000",
            "1111",
            "0011",
        ]
    )

    result = bp.specialized_error_projection(ss, e)

    expected = bitwise2.bit_tensor(
        [
            "00000000000000001000001000000000_00000001000010000000000000000000",
            "00000000100000000010000000000000_00000000000000000001000010000000",
            "00000000000000000000000000000000_00000000000000000000000000000000",
            "11001100100000001010001000000000_00000001000010000001000010000001",
            "00000000000000000000000000000000_00000000000000000000000000000000",
        ]
    )

    assert result == expected
