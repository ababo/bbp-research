import torch
import bitwise


def test_eval():
    weights = bitwise.tensor(
        [
            "10101010101010101010101010101010_10101010101010101010101010101010",
            "00101100011101001010010111000110_10011010001001100010011101100101",
            "11001100110011001100110011001100_11001100110011001100110011001100",
            "00011100110010100001011000101110_11100100010110010001110011001010",
        ]
    )
    bias = bitwise.tensor("1110")
    layer = bitwise.Layer(weights, bias)

    inputs = bitwise.tensor(
        [
            "11010011100010110101101000111001_01100101110110011101100010011010",
            "00101110011010100011110010110100_10101001010100010111000100011110",
            "11100011001101011110100111010001_00011011101001101110001100110101",
            "01010010111100011011001000001111_11001100100010101100101010011000",
        ]
    )

    results = layer.eval(inputs)

    # conjunct = bitwise.tensor(
    #     [
    #         [
    #             "10000010100010100000101000101000_00100000100010001000100010001010",
    #             "00000000000000000000000000000000_00000000000000000000000000000000",
    #             "11000000100010000100100000001000_01000100110010001100100010001000",
    #             "00010000100010100001001000101000_01100100010110010001100010001010",
    #         ],
    #         [
    #             "00101010001010100010100010100000_10101000000000000010000000001010",
    #             "00101100011000000010010010000100_10001000000000000010000100000100",
    #             "00001100010010000000110010000100_10001000010000000100000000001100",
    #             "00001100010010100001010000100100_10100000010100010001000000001010",
    #         ],
    #         [
    #             "10100010001000001010100010000000_00001010101000101010001000100000",
    #             "00100000001101001010000111000000_00011010001001100010001100100101",
    #             "11000000000001001100100011000000_00001000100001001100000000000100",
    #             "00000000000000000000000000000000_00000000000000000000000000000000",
    #         ],
    #         [
    #             "00000010101000001010001000001010_10001000100010101000101010001000",
    #             "00000000011100001010000000000110_10001000000000100000001000000000",
    #             "01000000110000001000000000001100_11001100100010001100100010001000",
    #             "00010000110000000001001000001110_11000100000010000000100010001000",
    #         ],
    #     ],
    # )

    # collapsed_packed = bitwise.tensor([
    #     "1011", "1111", "1110", "1111"
    # ])

    expected = bitwise.tensor(["0101", "0001", "0000", "0001"])

    assert torch.equal(results, expected)
